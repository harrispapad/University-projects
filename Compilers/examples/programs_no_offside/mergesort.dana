def merge: arr as int [], left as int, mid as int, right as int
    var n1 n2 i j k is int
begin
    n1 := mid - left + 1
    n2 := right - mid
    var L is int [n1]
    var R is int [n2]
    i := 0
    loop:
    begin
        if i < n1:
        begin
            L[i] := arr[left + i]
            i := i + 1
        end
        else: begin break end
    end

    j := 0
    loop:
    begin
        if j < n2:
        begin
            R[j] := arr[mid + 1 + j]
            j := j + 1
        end
        else: begin break end
    end

    i := 0
    j := 0
    k := left

    loop:
    begin
        if i < n1 and j < n2:
        begin
            if L[i] <= R[j]:
            begin
                arr[k] := L[i]
                i := i + 1
            end
            else:
            begin
                arr[k] := R[j]
                j := j + 1
            end
            k := k + 1
        end
        else: begin break end
    end

    loop:
    begin
        if i < n1:
        begin
            arr[k] := L[i]
            i := i + 1
            k := k + 1
        end
        else: begin break end
    end

    loop:
    begin
        if j < n2:
        begin
            arr[k] := R[j]
            j := j + 1
            k := k + 1
        end
        else: begin break end
    end

def merge_sort: arr as int [], left as int, right as int
begin
    if left < right:
    begin
        var mid is int
        mid := (left + right) / 2
        merge_sort: arr, left, mid
        merge_sort: arr, mid + 1, right
        merge: arr, left, mid, right
    end
end

def main
    var n is int
    var arr is int [n]
    var i is int
begin
    n := readInteger()

    i := 0
    loop:
    begin
        if i < n:
        begin
            arr[i] := readInteger()
            i := i + 1
        end
        else: begin break end
    end

    merge_sort: arr, 0, n-1

    i := 0
    loop:
    begin
        if i < n:
        begin
            writeInteger: arr[i]
            writeString: " "
            i := i + 1
        end
        else: begin break end
    end
    writeString: "\n"
end
