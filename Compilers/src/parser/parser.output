State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header local_def block

    3 header: T_id
    4       | T_id "is" data_type
    5       | T_id "is" data_type ':' fpar_def header_aux
    6       | T_id ':' fpar_def header_aux

    7 header_aux: ε
    8           | ',' fpar_def header_aux

    9 fpar_def: id_aux "as" fpar_type

   10 data_type: "int"
   11          | "byte"

   12 type: data_type
   13     | type '[' T_intconst ']'

   14 fpar_type: type
   15          | "ref" data_type
   16          | array_type

   17 array_type: data_type '[' ']'
   18           | array_type '[' T_intconst ']'

   19 local_def: ε
   20          | func_def local_def
   21          | func_decl local_def
   22          | var_def local_def

   23 func_decl: "decl" header

   24 var_def: "var" id_aux "is" type

   25 id_aux: T_id
   26       | id_aux T_id

   27 stmt: simple_stmt
   28     | stmt_list

   29 stmt_list: simple_stmt simple_stmt
   30          | stmt_list simple_stmt

   31 simple_stmt: "skip"
   32            | l_value ":=" expr
   33            | proc_call
   34            | "exit"
   35            | "return" ':' expr
   36            | "if" cond ':' block
   37            | "if" cond ':' block if_aux "else" ':' block
   38            | "loop" ':' block
   39            | "loop" T_id ':' block
   40            | "break"
   41            | "break" ':' T_id
   42            | "continue"
   43            | "continue" ':' T_id

   44 if_aux: ε
   45       | "elif" cond ':' block if_aux

   46 block: "begin" stmt "end"
   47      | stmt "end"

   48 proc_call: T_id
   49          | T_id ':' expr expr_aux

   50 expr_aux: ε
   51         | ',' expr expr_aux

   52 func_call: T_id '(' ')'
   53          | T_id '(' expr expr_aux ')'

   54 l_value: T_id
   55        | T_string
   56        | l_value '[' expr ']'

   57 expr: T_intconst
   58     | T_charconst
   59     | l_value
   60     | '(' expr ')'
   61     | func_call
   62     | "-" expr
   63     | "+" expr
   64     | expr "+" expr
   65     | expr "-" expr
   66     | expr "*" expr
   67     | expr "/" expr
   68     | expr "%" expr
   69     | "true"
   70     | "false"
   71     | '!' expr
   72     | expr '&' expr
   73     | expr '|' expr

   74 cond: expr
   75     | cond_aux

   76 cond_aux: '(' cond_aux ')'
   77         | "not" cond
   78         | cond "and" cond
   79         | cond "or" cond
   80         | expr "=" expr
   81         | expr "<>" expr
   82         | expr "<" expr
   83         | expr ">" expr
   84         | expr "<=" expr
   85         | expr ">=" expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 71
    '&' (38) 72
    '(' (40) 52 53 60 76
    ')' (41) 52 53 60 76
    ',' (44) 8 51
    ':' (58) 5 6 35 36 37 38 39 41 43 45 49
    '[' (91) 13 17 18 56
    ']' (93) 13 17 18 56
    '|' (124) 73
    error (256)
    "and" (258) 78
    "as" (259) 9
    "begin" (260) 46
    "break" (261) 40 41
    "byte" (262) 11
    "continue" (263) 42 43
    "decl" (264) 23
    "def" (265) 2
    "elif" (266) 45
    "else" (267) 37
    "end" (268) 46 47
    "exit" (269) 34
    "false" (270) 70
    "if" (271) 36 37
    "is" (272) 4 5 24
    "int" (273) 10
    "loop" (274) 38 39
    "not" (275) 77
    "or" (276) 79
    "ref" (277) 15
    "return" (278) 35
    "skip" (279) 31
    "true" (280) 69
    "var" (281) 24
    ":=" (282) 32
    "=" (283) 80
    "<>" (284) 81
    "<" (285) 82
    ">" (286) 83
    "<=" (287) 84
    ">=" (288) 85
    "+" (289) 63 64
    "-" (290) 62 65
    "*" (291) 66
    "/" (292) 67
    "%" (293) 68
    T_id (294) 3 4 5 6 25 26 39 41 43 48 49 52 53 54
    T_string (295) 55
    T_intconst (296) 13 18 57
    T_charconst (297) 58
    UMINUS (298)
    UPLUS (299)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    func_def (56)
        on left: 2
        on right: 1 20
    header (57)
        on left: 3 4 5 6
        on right: 2 23
    header_aux (58)
        on left: 7 8
        on right: 5 6 8
    fpar_def (59)
        on left: 9
        on right: 5 6 8
    data_type (60)
        on left: 10 11
        on right: 4 5 12 15 17
    type (61)
        on left: 12 13
        on right: 13 14 24
    fpar_type (62)
        on left: 14 15 16
        on right: 9
    array_type (63)
        on left: 17 18
        on right: 16 18
    local_def (64)
        on left: 19 20 21 22
        on right: 2 20 21 22
    func_decl (65)
        on left: 23
        on right: 21
    var_def (66)
        on left: 24
        on right: 22
    id_aux (67)
        on left: 25 26
        on right: 9 24 26
    stmt (68)
        on left: 27 28
        on right: 46 47
    stmt_list (69)
        on left: 29 30
        on right: 28 30
    simple_stmt (70)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 27 29 30
    if_aux (71)
        on left: 44 45
        on right: 37 45
    block (72)
        on left: 46 47
        on right: 2 36 37 38 39 45
    proc_call (73)
        on left: 48 49
        on right: 33
    expr_aux (74)
        on left: 50 51
        on right: 49 51 53
    func_call (75)
        on left: 52 53
        on right: 61
    l_value (76)
        on left: 54 55 56
        on right: 32 56 59
    expr (77)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 32 35 49 51 53 56 60 62 63 64 65 66 67 68 71 72 73 74 80 81 82 83 84 85
    cond (78)
        on left: 74 75
        on right: 36 37 45 77 78 79
    cond_aux (79)
        on left: 76 77 78 79 80 81 82 83 84 85
        on right: 75 76


State 0

    0 $accept: • program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" • header local_def block

    T_id  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: func_def •

    $default  reduce using rule 1 (program)


State 4

    3 header: T_id •
    4       | T_id • "is" data_type
    5       | T_id • "is" data_type ':' fpar_def header_aux
    6       | T_id • ':' fpar_def header_aux

    "is"  shift, and go to state 7
    ':'   shift, and go to state 8

    $default  reduce using rule 3 (header)


State 5

    2 func_def: "def" header • local_def block

    "decl"  shift, and go to state 9
    "def"   shift, and go to state 1
    "var"   shift, and go to state 10

    $default  reduce using rule 19 (local_def)

    func_def   go to state 11
    local_def  go to state 12
    func_decl  go to state 13
    var_def    go to state 14


State 6

    0 $accept: program $end •

    $default  accept


State 7

    4 header: T_id "is" • data_type
    5       | T_id "is" • data_type ':' fpar_def header_aux

    "byte"  shift, and go to state 15
    "int"   shift, and go to state 16

    data_type  go to state 17


State 8

    6 header: T_id ':' • fpar_def header_aux

    T_id  shift, and go to state 18

    fpar_def  go to state 19
    id_aux    go to state 20


State 9

   23 func_decl: "decl" • header

    T_id  shift, and go to state 4

    header  go to state 21


State 10

   24 var_def: "var" • id_aux "is" type

    T_id  shift, and go to state 18

    id_aux  go to state 22


State 11

   20 local_def: func_def • local_def

    "decl"  shift, and go to state 9
    "def"   shift, and go to state 1
    "var"   shift, and go to state 10

    $default  reduce using rule 19 (local_def)

    func_def   go to state 11
    local_def  go to state 23
    func_decl  go to state 13
    var_def    go to state 14


State 12

    2 func_def: "def" header local_def • block

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 37
    proc_call    go to state 38
    l_value      go to state 39


State 13

   21 local_def: func_decl • local_def

    "decl"  shift, and go to state 9
    "def"   shift, and go to state 1
    "var"   shift, and go to state 10

    $default  reduce using rule 19 (local_def)

    func_def   go to state 11
    local_def  go to state 40
    func_decl  go to state 13
    var_def    go to state 14


State 14

   22 local_def: var_def • local_def

    "decl"  shift, and go to state 9
    "def"   shift, and go to state 1
    "var"   shift, and go to state 10

    $default  reduce using rule 19 (local_def)

    func_def   go to state 11
    local_def  go to state 41
    func_decl  go to state 13
    var_def    go to state 14


State 15

   11 data_type: "byte" •

    $default  reduce using rule 11 (data_type)


State 16

   10 data_type: "int" •

    $default  reduce using rule 10 (data_type)


State 17

    4 header: T_id "is" data_type •
    5       | T_id "is" data_type • ':' fpar_def header_aux

    ':'  shift, and go to state 42

    $default  reduce using rule 4 (header)


State 18

   25 id_aux: T_id •

    $default  reduce using rule 25 (id_aux)


State 19

    6 header: T_id ':' fpar_def • header_aux

    ','  shift, and go to state 43

    $default  reduce using rule 7 (header_aux)

    header_aux  go to state 44


State 20

    9 fpar_def: id_aux • "as" fpar_type
   26 id_aux: id_aux • T_id

    "as"  shift, and go to state 45
    T_id  shift, and go to state 46


State 21

   23 func_decl: "decl" header •

    $default  reduce using rule 23 (func_decl)


State 22

   24 var_def: "var" id_aux • "is" type
   26 id_aux: id_aux • T_id

    "is"  shift, and go to state 47
    T_id  shift, and go to state 46


State 23

   20 local_def: func_def local_def •

    $default  reduce using rule 20 (local_def)


State 24

   46 block: "begin" • stmt "end"

    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 48
    stmt_list    go to state 35
    simple_stmt  go to state 36
    proc_call    go to state 38
    l_value      go to state 39


State 25

   40 simple_stmt: "break" •
   41            | "break" • ':' T_id

    ':'  shift, and go to state 49

    $default  reduce using rule 40 (simple_stmt)


State 26

   42 simple_stmt: "continue" •
   43            | "continue" • ':' T_id

    ':'  shift, and go to state 50

    $default  reduce using rule 42 (simple_stmt)


State 27

   34 simple_stmt: "exit" •

    $default  reduce using rule 34 (simple_stmt)


State 28

   36 simple_stmt: "if" • cond ':' block
   37            | "if" • cond ':' block if_aux "else" ':' block

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 63
    cond       go to state 64
    cond_aux   go to state 65


State 29

   38 simple_stmt: "loop" • ':' block
   39            | "loop" • T_id ':' block

    T_id  shift, and go to state 66
    ':'   shift, and go to state 67


State 30

   35 simple_stmt: "return" • ':' expr

    ':'  shift, and go to state 68


State 31

   31 simple_stmt: "skip" •

    $default  reduce using rule 31 (simple_stmt)


State 32

   48 proc_call: T_id •
   49          | T_id • ':' expr expr_aux
   54 l_value: T_id •

    ':'  shift, and go to state 69

    ":="      reduce using rule 54 (l_value)
    '['       reduce using rule 54 (l_value)
    $default  reduce using rule 48 (proc_call)


State 33

   55 l_value: T_string •

    $default  reduce using rule 55 (l_value)


State 34

   47 block: stmt • "end"

    "end"  shift, and go to state 70


State 35

   28 stmt: stmt_list •
   30 stmt_list: stmt_list • simple_stmt

    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    $default  reduce using rule 28 (stmt)

    simple_stmt  go to state 71
    proc_call    go to state 38
    l_value      go to state 39


State 36

   27 stmt: simple_stmt •
   29 stmt_list: simple_stmt • simple_stmt

    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    $default  reduce using rule 27 (stmt)

    simple_stmt  go to state 72
    proc_call    go to state 38
    l_value      go to state 39


State 37

    2 func_def: "def" header local_def block •

    $default  reduce using rule 2 (func_def)


State 38

   33 simple_stmt: proc_call •

    $default  reduce using rule 33 (simple_stmt)


State 39

   32 simple_stmt: l_value • ":=" expr
   56 l_value: l_value • '[' expr ']'

    ":="  shift, and go to state 73
    '['   shift, and go to state 74


State 40

   21 local_def: func_decl local_def •

    $default  reduce using rule 21 (local_def)


State 41

   22 local_def: var_def local_def •

    $default  reduce using rule 22 (local_def)


State 42

    5 header: T_id "is" data_type ':' • fpar_def header_aux

    T_id  shift, and go to state 18

    fpar_def  go to state 75
    id_aux    go to state 20


State 43

    8 header_aux: ',' • fpar_def header_aux

    T_id  shift, and go to state 18

    fpar_def  go to state 76
    id_aux    go to state 20


State 44

    6 header: T_id ':' fpar_def header_aux •

    $default  reduce using rule 6 (header)


State 45

    9 fpar_def: id_aux "as" • fpar_type

    "byte"  shift, and go to state 15
    "int"   shift, and go to state 16
    "ref"   shift, and go to state 77

    data_type   go to state 78
    type        go to state 79
    fpar_type   go to state 80
    array_type  go to state 81


State 46

   26 id_aux: id_aux T_id •

    $default  reduce using rule 26 (id_aux)


State 47

   24 var_def: "var" id_aux "is" • type

    "byte"  shift, and go to state 15
    "int"   shift, and go to state 16

    data_type  go to state 82
    type       go to state 83


State 48

   46 block: "begin" stmt • "end"

    "end"  shift, and go to state 84


State 49

   41 simple_stmt: "break" ':' • T_id

    T_id  shift, and go to state 85


State 50

   43 simple_stmt: "continue" ':' • T_id

    T_id  shift, and go to state 86


State 51

   70 expr: "false" •

    $default  reduce using rule 70 (expr)


State 52

   77 cond_aux: "not" • cond

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 63
    cond       go to state 87
    cond_aux   go to state 65


State 53

   69 expr: "true" •

    $default  reduce using rule 69 (expr)


State 54

   63 expr: "+" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 89


State 55

   62 expr: "-" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 90


State 56

   52 func_call: T_id • '(' ')'
   53          | T_id • '(' expr expr_aux ')'
   54 l_value: T_id •

    '('  shift, and go to state 91

    $default  reduce using rule 54 (l_value)


State 57

   57 expr: T_intconst •

    $default  reduce using rule 57 (expr)


State 58

   58 expr: T_charconst •

    $default  reduce using rule 58 (expr)


State 59

   71 expr: '!' • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 92


State 60

   60 expr: '(' • expr ')'
   76 cond_aux: '(' • cond_aux ')'

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 93
    cond       go to state 94
    cond_aux   go to state 95


State 61

   61 expr: func_call •

    $default  reduce using rule 61 (expr)


State 62

   56 l_value: l_value • '[' expr ']'
   59 expr: l_value •

    '['  shift, and go to state 74

    $default  reduce using rule 59 (expr)


State 63

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   74 cond: expr •
   80 cond_aux: expr • "=" expr
   81         | expr • "<>" expr
   82         | expr • "<" expr
   83         | expr • ">" expr
   84         | expr • "<=" expr
   85         | expr • ">=" expr

    "="   shift, and go to state 96
    "<>"  shift, and go to state 97
    "<"   shift, and go to state 98
    ">"   shift, and go to state 99
    "<="  shift, and go to state 100
    ">="  shift, and go to state 101
    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    '|'   shift, and go to state 107
    '&'   shift, and go to state 108

    $default  reduce using rule 74 (cond)


State 64

   36 simple_stmt: "if" cond • ':' block
   37            | "if" cond • ':' block if_aux "else" ':' block
   78 cond_aux: cond • "and" cond
   79         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110
    ':'    shift, and go to state 111


State 65

   75 cond: cond_aux •

    $default  reduce using rule 75 (cond)


State 66

   39 simple_stmt: "loop" T_id • ':' block

    ':'  shift, and go to state 112


State 67

   38 simple_stmt: "loop" ':' • block

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 113
    proc_call    go to state 38
    l_value      go to state 39


State 68

   35 simple_stmt: "return" ':' • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 114


State 69

   49 proc_call: T_id ':' • expr expr_aux

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 115


State 70

   47 block: stmt "end" •

    $default  reduce using rule 47 (block)


State 71

   30 stmt_list: stmt_list simple_stmt •

    $default  reduce using rule 30 (stmt_list)


State 72

   29 stmt_list: simple_stmt simple_stmt •

    $default  reduce using rule 29 (stmt_list)


State 73

   32 simple_stmt: l_value ":=" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 116


State 74

   56 l_value: l_value '[' • expr ']'

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 117


State 75

    5 header: T_id "is" data_type ':' fpar_def • header_aux

    ','  shift, and go to state 43

    $default  reduce using rule 7 (header_aux)

    header_aux  go to state 118


State 76

    8 header_aux: ',' fpar_def • header_aux

    ','  shift, and go to state 43

    $default  reduce using rule 7 (header_aux)

    header_aux  go to state 119


State 77

   15 fpar_type: "ref" • data_type

    "byte"  shift, and go to state 15
    "int"   shift, and go to state 16

    data_type  go to state 120


State 78

   12 type: data_type •
   17 array_type: data_type • '[' ']'

    '['  shift, and go to state 121

    '['       [reduce using rule 12 (type)]
    $default  reduce using rule 12 (type)


State 79

   13 type: type • '[' T_intconst ']'
   14 fpar_type: type •

    '['  shift, and go to state 122

    $default  reduce using rule 14 (fpar_type)


State 80

    9 fpar_def: id_aux "as" fpar_type •

    $default  reduce using rule 9 (fpar_def)


State 81

   16 fpar_type: array_type •
   18 array_type: array_type • '[' T_intconst ']'

    '['  shift, and go to state 123

    $default  reduce using rule 16 (fpar_type)


State 82

   12 type: data_type •

    $default  reduce using rule 12 (type)


State 83

   13 type: type • '[' T_intconst ']'
   24 var_def: "var" id_aux "is" type •

    '['  shift, and go to state 122

    $default  reduce using rule 24 (var_def)


State 84

   46 block: "begin" stmt "end" •

    $default  reduce using rule 46 (block)


State 85

   41 simple_stmt: "break" ':' T_id •

    $default  reduce using rule 41 (simple_stmt)


State 86

   43 simple_stmt: "continue" ':' T_id •

    $default  reduce using rule 43 (simple_stmt)


State 87

   77 cond_aux: "not" cond •
   78         | cond • "and" cond
   79         | cond • "or" cond

    $default  reduce using rule 77 (cond_aux)


State 88

   60 expr: '(' • expr ')'

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 124


State 89

   63 expr: "+" expr •
   64     | expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 63 (expr)


State 90

   62 expr: "-" expr •
   64     | expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 62 (expr)


State 91

   52 func_call: T_id '(' • ')'
   53          | T_id '(' • expr expr_aux ')'

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88
    ')'          shift, and go to state 125

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 126


State 92

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   71     | '!' expr •
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 71 (expr)


State 93

   60 expr: '(' expr • ')'
   64     | expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   74 cond: expr •
   80 cond_aux: expr • "=" expr
   81         | expr • "<>" expr
   82         | expr • "<" expr
   83         | expr • ">" expr
   84         | expr • "<=" expr
   85         | expr • ">=" expr

    "="   shift, and go to state 96
    "<>"  shift, and go to state 97
    "<"   shift, and go to state 98
    ">"   shift, and go to state 99
    "<="  shift, and go to state 100
    ">="  shift, and go to state 101
    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    '|'   shift, and go to state 107
    '&'   shift, and go to state 108
    ')'   shift, and go to state 127

    $default  reduce using rule 74 (cond)


State 94

   78 cond_aux: cond • "and" cond
   79         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110


State 95

   75 cond: cond_aux •
   76 cond_aux: '(' cond_aux • ')'

    ')'  shift, and go to state 128

    $default  reduce using rule 75 (cond)


State 96

   80 cond_aux: expr "=" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 129


State 97

   81 cond_aux: expr "<>" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 130


State 98

   82 cond_aux: expr "<" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 131


State 99

   83 cond_aux: expr ">" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 132


State 100

   84 cond_aux: expr "<=" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 133


State 101

   85 cond_aux: expr ">=" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 134


State 102

   64 expr: expr "+" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 135


State 103

   65 expr: expr "-" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 136


State 104

   66 expr: expr "*" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 137


State 105

   67 expr: expr "/" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 138


State 106

   68 expr: expr "%" • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 139


State 107

   73 expr: expr '|' • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 140


State 108

   72 expr: expr '&' • expr

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 141


State 109

   78 cond_aux: cond "and" • cond

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 63
    cond       go to state 142
    cond_aux   go to state 65


State 110

   79 cond_aux: cond "or" • cond

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 63
    cond       go to state 143
    cond_aux   go to state 65


State 111

   36 simple_stmt: "if" cond ':' • block
   37            | "if" cond ':' • block if_aux "else" ':' block

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 144
    proc_call    go to state 38
    l_value      go to state 39


State 112

   39 simple_stmt: "loop" T_id ':' • block

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 145
    proc_call    go to state 38
    l_value      go to state 39


State 113

   38 simple_stmt: "loop" ':' block •

    $default  reduce using rule 38 (simple_stmt)


State 114

   35 simple_stmt: "return" ':' expr •
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 35 (simple_stmt)


State 115

   49 proc_call: T_id ':' expr • expr_aux
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ','  shift, and go to state 146

    $default  reduce using rule 50 (expr_aux)

    expr_aux  go to state 147


State 116

   32 simple_stmt: l_value ":=" expr •
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 32 (simple_stmt)


State 117

   56 l_value: l_value '[' expr • ']'
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ']'  shift, and go to state 148


State 118

    5 header: T_id "is" data_type ':' fpar_def header_aux •

    $default  reduce using rule 5 (header)


State 119

    8 header_aux: ',' fpar_def header_aux •

    $default  reduce using rule 8 (header_aux)


State 120

   15 fpar_type: "ref" data_type •

    $default  reduce using rule 15 (fpar_type)


State 121

   17 array_type: data_type '[' • ']'

    ']'  shift, and go to state 149


State 122

   13 type: type '[' • T_intconst ']'

    T_intconst  shift, and go to state 150


State 123

   18 array_type: array_type '[' • T_intconst ']'

    T_intconst  shift, and go to state 151


State 124

   60 expr: '(' expr • ')'
   64     | expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ')'  shift, and go to state 127


State 125

   52 func_call: T_id '(' ')' •

    $default  reduce using rule 52 (func_call)


State 126

   53 func_call: T_id '(' expr • expr_aux ')'
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ','  shift, and go to state 146

    $default  reduce using rule 50 (expr_aux)

    expr_aux  go to state 152


State 127

   60 expr: '(' expr ')' •

    $default  reduce using rule 60 (expr)


State 128

   76 cond_aux: '(' cond_aux ')' •

    $default  reduce using rule 76 (cond_aux)


State 129

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   80 cond_aux: expr "=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 80 (cond_aux)


State 130

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   81 cond_aux: expr "<>" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 81 (cond_aux)


State 131

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   82 cond_aux: expr "<" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 82 (cond_aux)


State 132

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   83 cond_aux: expr ">" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 83 (cond_aux)


State 133

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   84 cond_aux: expr "<=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 84 (cond_aux)


State 134

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   85 cond_aux: expr ">=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 85 (cond_aux)


State 135

   64 expr: expr • "+" expr
   64     | expr "+" expr •
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 64 (expr)


State 136

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   65     | expr "-" expr •
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 65 (expr)


State 137

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   66     | expr "*" expr •
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 66 (expr)


State 138

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   67     | expr "/" expr •
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 67 (expr)


State 139

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   68     | expr "%" expr •
   72     | expr • '&' expr
   73     | expr • '|' expr

    $default  reduce using rule 68 (expr)


State 140

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr
   73     | expr '|' expr •

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 73 (expr)


State 141

   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   72     | expr '&' expr •
   73     | expr • '|' expr

    $default  reduce using rule 72 (expr)


State 142

   78 cond_aux: cond • "and" cond
   78         | cond "and" cond •
   79         | cond • "or" cond

    $default  reduce using rule 78 (cond_aux)


State 143

   78 cond_aux: cond • "and" cond
   79         | cond • "or" cond
   79         | cond "or" cond •

    "and"  shift, and go to state 109

    $default  reduce using rule 79 (cond_aux)


State 144

   36 simple_stmt: "if" cond ':' block •
   37            | "if" cond ':' block • if_aux "else" ':' block

    "elif"  shift, and go to state 153

    "else"    reduce using rule 44 (if_aux)
    $default  reduce using rule 36 (simple_stmt)

    if_aux  go to state 154


State 145

   39 simple_stmt: "loop" T_id ':' block •

    $default  reduce using rule 39 (simple_stmt)


State 146

   51 expr_aux: ',' • expr expr_aux

    "false"      shift, and go to state 51
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 88

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 155


State 147

   49 proc_call: T_id ':' expr expr_aux •

    $default  reduce using rule 49 (proc_call)


State 148

   56 l_value: l_value '[' expr ']' •

    $default  reduce using rule 56 (l_value)


State 149

   17 array_type: data_type '[' ']' •

    $default  reduce using rule 17 (array_type)


State 150

   13 type: type '[' T_intconst • ']'

    ']'  shift, and go to state 156


State 151

   18 array_type: array_type '[' T_intconst • ']'

    ']'  shift, and go to state 157


State 152

   53 func_call: T_id '(' expr expr_aux • ')'

    ')'  shift, and go to state 158


State 153

   45 if_aux: "elif" • cond ':' block if_aux

    "false"      shift, and go to state 51
    "not"        shift, and go to state 52
    "true"       shift, and go to state 53
    "+"          shift, and go to state 54
    "-"          shift, and go to state 55
    T_id         shift, and go to state 56
    T_string     shift, and go to state 33
    T_intconst   shift, and go to state 57
    T_charconst  shift, and go to state 58
    '!'          shift, and go to state 59
    '('          shift, and go to state 60

    func_call  go to state 61
    l_value    go to state 62
    expr       go to state 63
    cond       go to state 159
    cond_aux   go to state 65


State 154

   37 simple_stmt: "if" cond ':' block if_aux • "else" ':' block

    "else"  shift, and go to state 160


State 155

   51 expr_aux: ',' expr • expr_aux
   64 expr: expr • "+" expr
   65     | expr • "-" expr
   66     | expr • "*" expr
   67     | expr • "/" expr
   68     | expr • "%" expr
   72     | expr • '&' expr
   73     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ','  shift, and go to state 146

    $default  reduce using rule 50 (expr_aux)

    expr_aux  go to state 161


State 156

   13 type: type '[' T_intconst ']' •

    $default  reduce using rule 13 (type)


State 157

   18 array_type: array_type '[' T_intconst ']' •

    $default  reduce using rule 18 (array_type)


State 158

   53 func_call: T_id '(' expr expr_aux ')' •

    $default  reduce using rule 53 (func_call)


State 159

   45 if_aux: "elif" cond • ':' block if_aux
   78 cond_aux: cond • "and" cond
   79         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110
    ':'    shift, and go to state 162


State 160

   37 simple_stmt: "if" cond ':' block if_aux "else" • ':' block

    ':'  shift, and go to state 163


State 161

   51 expr_aux: ',' expr expr_aux •

    $default  reduce using rule 51 (expr_aux)


State 162

   45 if_aux: "elif" cond ':' • block if_aux

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 164
    proc_call    go to state 38
    l_value      go to state 39


State 163

   37 simple_stmt: "if" cond ':' block if_aux "else" ':' • block

    "begin"     shift, and go to state 24
    "break"     shift, and go to state 25
    "continue"  shift, and go to state 26
    "exit"      shift, and go to state 27
    "if"        shift, and go to state 28
    "loop"      shift, and go to state 29
    "return"    shift, and go to state 30
    "skip"      shift, and go to state 31
    T_id        shift, and go to state 32
    T_string    shift, and go to state 33

    stmt         go to state 34
    stmt_list    go to state 35
    simple_stmt  go to state 36
    block        go to state 165
    proc_call    go to state 38
    l_value      go to state 39


State 164

   45 if_aux: "elif" cond ':' block • if_aux

    "elif"  shift, and go to state 153

    $default  reduce using rule 44 (if_aux)

    if_aux  go to state 166


State 165

   37 simple_stmt: "if" cond ':' block if_aux "else" ':' block •

    $default  reduce using rule 37 (simple_stmt)


State 166

   45 if_aux: "elif" cond ':' block if_aux •

    $default  reduce using rule 45 (if_aux)
