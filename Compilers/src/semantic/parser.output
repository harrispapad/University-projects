State 48 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header local_def block

    3 header: T_id
    4       | T_id "is" data_type
    5       | T_id "is" data_type ':' fpar_def header_aux
    6       | T_id ':' fpar_def header_aux

    7 header_aux: ε
    8           | header_aux ',' fpar_def

    9 fpar_def: id_aux "as" fpar_type

   10 data_type: "int"
   11          | "byte"

   12 type: data_type
   13     | type '[' T_intconst ']'

   14 fpar_type: type
   15          | "ref" data_type
   16          | array_type

   17 array_type: data_type '[' ']'
   18           | array_type '[' T_intconst ']'

   19 local_def: ε
   20          | local_def func_def
   21          | local_def func_decl
   22          | local_def var_def

   23 func_decl: "decl" header

   24 var_def: "var" id_aux "is" type

   25 id_aux: T_id
   26       | id_aux T_id

   27 stmt: stmt_list simple_stmt

   28 stmt_list: ε
   29          | stmt_list simple_stmt

   30 simple_stmt: "skip"
   31            | l_value ":=" expr
   32            | proc_call
   33            | "exit"
   34            | "return" ':' expr
   35            | "if" cond ':' block
   36            | "if" cond ':' block if_aux "else" ':' block
   37            | "loop" ':' block
   38            | "loop" T_id ':' block
   39            | "break"
   40            | "break" ':' T_id
   41            | "continue"
   42            | "continue" ':' T_id

   43 if_aux: ε
   44       | if_aux "elif" cond ':' block

   45 block: "begin" stmt "end"
   46      | stmt "end"

   47 proc_call: T_id
   48          | T_id ':' expr expr_aux

   49 expr_aux: ε
   50         | expr_aux ',' expr

   51 func_call: T_id '(' ')'
   52          | T_id '(' expr expr_aux ')'

   53 l_value: T_id
   54        | T_string
   55        | l_value '[' expr ']'

   56 expr: T_intconst
   57     | T_charconst
   58     | l_value
   59     | '(' expr ')'
   60     | func_call
   61     | "-" expr
   62     | "+" expr
   63     | expr "+" expr
   64     | expr "-" expr
   65     | expr "*" expr
   66     | expr "/" expr
   67     | expr "%" expr
   68     | "true"
   69     | "false"
   70     | '!' expr
   71     | expr '&' expr
   72     | expr '|' expr

   73 cond: expr
   74     | '(' cond_aux ')'
   75     | cond_aux

   76 cond_aux: "not" cond
   77         | cond "and" cond
   78         | cond "or" cond
   79         | expr "=" expr
   80         | expr "<>" expr
   81         | expr "<" expr
   82         | expr ">" expr
   83         | expr "<=" expr
   84         | expr ">=" expr


Terminals, with rules where they appear

    $end (0) 0
    '!' <op> (33) 70
    '&' <op> (38) 71
    '(' (40) 51 52 59 74
    ')' (41) 51 52 59 74
    ',' (44) 8 50
    ':' (58) 5 6 34 35 36 37 38 40 42 44 48
    '[' (91) 13 17 18 55
    ']' (93) 13 17 18 55
    '|' <op> (124) 72
    error (256)
    "and" <op> (258) 77
    "as" (259) 9
    "begin" (260) 45
    "break" (261) 39 40
    "byte" (262) 11
    "continue" (263) 41 42
    "decl" (264) 23
    "def" (265) 2
    "elif" (266) 44
    "else" (267) 36
    "end" (268) 45 46
    "exit" (269) 33
    "false" (270) 69
    "if" (271) 35 36
    "is" (272) 4 5 24
    "int" (273) 10
    "loop" (274) 37 38
    "not" <op> (275) 76
    "or" <op> (276) 78
    "ref" (277) 15
    "return" (278) 34
    "skip" (279) 30
    "true" (280) 68
    "var" (281) 24
    ":=" (282) 31
    "=" <op> (283) 79
    "<>" <op> (284) 80
    "<" <op> (285) 81
    ">" <op> (286) 82
    "<=" <op> (287) 83
    ">=" <op> (288) 84
    "+" <op> (289) 62 63
    "-" <op> (290) 61 64
    "*" <op> (291) 65
    "/" <op> (292) 66
    "%" <op> (293) 67
    T_id <var> (294) 3 4 5 6 25 26 38 40 42 47 48 51 52 53
    T_string <string> (295) 54
    T_intconst <num> (296) 13 18 56
    T_charconst <character> (297) 57
    UMINUS <op> (298)
    UPLUS <op> (299)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    func_def <func_def> (56)
        on left: 2
        on right: 1 20
    header <header> (57)
        on left: 3 4 5 6
        on right: 2 23
    header_aux <header_aux> (58)
        on left: 7 8
        on right: 5 6 8
    fpar_def <fpar_def> (59)
        on left: 9
        on right: 5 6 8
    data_type <data_type> (60)
        on left: 10 11
        on right: 4 5 12 15 17
    type <type> (61)
        on left: 12 13
        on right: 13 14 24
    fpar_type <fpar_type> (62)
        on left: 14 15 16
        on right: 9
    array_type <array_type> (63)
        on left: 17 18
        on right: 16 18
    local_def <local_def> (64)
        on left: 19 20 21 22
        on right: 2 20 21 22
    func_decl <func_decl> (65)
        on left: 23
        on right: 21
    var_def <var_def> (66)
        on left: 24
        on right: 22
    id_aux <id_aux> (67)
        on left: 25 26
        on right: 9 24 26
    stmt <stmt> (68)
        on left: 27
        on right: 45 46
    stmt_list <stmt_list> (69)
        on left: 28 29
        on right: 27 29
    simple_stmt <simple_stmt> (70)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 27 29
    if_aux <if_aux> (71)
        on left: 43 44
        on right: 36 44
    block <block> (72)
        on left: 45 46
        on right: 2 35 36 37 38 44
    proc_call <proc_call> (73)
        on left: 47 48
        on right: 32
    expr_aux <expr_aux> (74)
        on left: 49 50
        on right: 48 50 52
    func_call <func_call> (75)
        on left: 51 52
        on right: 60
    l_value <l_val> (76)
        on left: 53 54 55
        on right: 31 55 58
    expr <expr> (77)
        on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
        on right: 31 34 48 50 52 55 59 61 62 63 64 65 66 67 70 71 72 73 79 80 81 82 83 84
    cond <cond> (78)
        on left: 73 74 75
        on right: 35 36 44 76 77 78
    cond_aux <cond> (79)
        on left: 76 77 78 79 80 81 82 83 84
        on right: 74 75


State 0

    0 $accept: • program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" • header local_def block

    T_id  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: func_def •

    $default  reduce using rule 1 (program)


State 4

    3 header: T_id •
    4       | T_id • "is" data_type
    5       | T_id • "is" data_type ':' fpar_def header_aux
    6       | T_id • ':' fpar_def header_aux

    "is"  shift, and go to state 7
    ':'   shift, and go to state 8

    $default  reduce using rule 3 (header)


State 5

    2 func_def: "def" header • local_def block

    $default  reduce using rule 19 (local_def)

    local_def  go to state 9


State 6

    0 $accept: program $end •

    $default  accept


State 7

    4 header: T_id "is" • data_type
    5       | T_id "is" • data_type ':' fpar_def header_aux

    "byte"  shift, and go to state 10
    "int"   shift, and go to state 11

    data_type  go to state 12


State 8

    6 header: T_id ':' • fpar_def header_aux

    T_id  shift, and go to state 13

    fpar_def  go to state 14
    id_aux    go to state 15


State 9

    2 func_def: "def" header local_def • block
   20 local_def: local_def • func_def
   21          | local_def • func_decl
   22          | local_def • var_def

    "begin"  shift, and go to state 16
    "decl"   shift, and go to state 17
    "def"    shift, and go to state 1
    "var"    shift, and go to state 18

    $default  reduce using rule 28 (stmt_list)

    func_def   go to state 19
    func_decl  go to state 20
    var_def    go to state 21
    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 24


State 10

   11 data_type: "byte" •

    $default  reduce using rule 11 (data_type)


State 11

   10 data_type: "int" •

    $default  reduce using rule 10 (data_type)


State 12

    4 header: T_id "is" data_type •
    5       | T_id "is" data_type • ':' fpar_def header_aux

    ':'  shift, and go to state 25

    $default  reduce using rule 4 (header)


State 13

   25 id_aux: T_id •

    $default  reduce using rule 25 (id_aux)


State 14

    6 header: T_id ':' fpar_def • header_aux

    $default  reduce using rule 7 (header_aux)

    header_aux  go to state 26


State 15

    9 fpar_def: id_aux • "as" fpar_type
   26 id_aux: id_aux • T_id

    "as"  shift, and go to state 27
    T_id  shift, and go to state 28


State 16

   45 block: "begin" • stmt "end"

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 29
    stmt_list  go to state 23


State 17

   23 func_decl: "decl" • header

    T_id  shift, and go to state 4

    header  go to state 30


State 18

   24 var_def: "var" • id_aux "is" type

    T_id  shift, and go to state 13

    id_aux  go to state 31


State 19

   20 local_def: local_def func_def •

    $default  reduce using rule 20 (local_def)


State 20

   21 local_def: local_def func_decl •

    $default  reduce using rule 21 (local_def)


State 21

   22 local_def: local_def var_def •

    $default  reduce using rule 22 (local_def)


State 22

   46 block: stmt • "end"

    "end"  shift, and go to state 32


State 23

   27 stmt: stmt_list • simple_stmt
   29 stmt_list: stmt_list • simple_stmt

    "break"     shift, and go to state 33
    "continue"  shift, and go to state 34
    "exit"      shift, and go to state 35
    "if"        shift, and go to state 36
    "loop"      shift, and go to state 37
    "return"    shift, and go to state 38
    "skip"      shift, and go to state 39
    T_id        shift, and go to state 40
    T_string    shift, and go to state 41

    simple_stmt  go to state 42
    proc_call    go to state 43
    l_value      go to state 44


State 24

    2 func_def: "def" header local_def block •

    $default  reduce using rule 2 (func_def)


State 25

    5 header: T_id "is" data_type ':' • fpar_def header_aux

    T_id  shift, and go to state 13

    fpar_def  go to state 45
    id_aux    go to state 15


State 26

    6 header: T_id ':' fpar_def header_aux •
    8 header_aux: header_aux • ',' fpar_def

    ','  shift, and go to state 46

    $default  reduce using rule 6 (header)


State 27

    9 fpar_def: id_aux "as" • fpar_type

    "byte"  shift, and go to state 10
    "int"   shift, and go to state 11
    "ref"   shift, and go to state 47

    data_type   go to state 48
    type        go to state 49
    fpar_type   go to state 50
    array_type  go to state 51


State 28

   26 id_aux: id_aux T_id •

    $default  reduce using rule 26 (id_aux)


State 29

   45 block: "begin" stmt • "end"

    "end"  shift, and go to state 52


State 30

   23 func_decl: "decl" header •

    $default  reduce using rule 23 (func_decl)


State 31

   24 var_def: "var" id_aux • "is" type
   26 id_aux: id_aux • T_id

    "is"  shift, and go to state 53
    T_id  shift, and go to state 28


State 32

   46 block: stmt "end" •

    $default  reduce using rule 46 (block)


State 33

   39 simple_stmt: "break" •
   40            | "break" • ':' T_id

    ':'  shift, and go to state 54

    $default  reduce using rule 39 (simple_stmt)


State 34

   41 simple_stmt: "continue" •
   42            | "continue" • ':' T_id

    ':'  shift, and go to state 55

    $default  reduce using rule 41 (simple_stmt)


State 35

   33 simple_stmt: "exit" •

    $default  reduce using rule 33 (simple_stmt)


State 36

   35 simple_stmt: "if" • cond ':' block
   36            | "if" • cond ':' block if_aux "else" ':' block

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 68
    cond       go to state 69
    cond_aux   go to state 70


State 37

   37 simple_stmt: "loop" • ':' block
   38            | "loop" • T_id ':' block

    T_id  shift, and go to state 71
    ':'   shift, and go to state 72


State 38

   34 simple_stmt: "return" • ':' expr

    ':'  shift, and go to state 73


State 39

   30 simple_stmt: "skip" •

    $default  reduce using rule 30 (simple_stmt)


State 40

   47 proc_call: T_id •
   48          | T_id • ':' expr expr_aux
   53 l_value: T_id •

    ':'  shift, and go to state 74

    ":="      reduce using rule 53 (l_value)
    '['       reduce using rule 53 (l_value)
    $default  reduce using rule 47 (proc_call)


State 41

   54 l_value: T_string •

    $default  reduce using rule 54 (l_value)


State 42

   27 stmt: stmt_list simple_stmt •
   29 stmt_list: stmt_list simple_stmt •

    "end"     reduce using rule 27 (stmt)
    $default  reduce using rule 29 (stmt_list)


State 43

   32 simple_stmt: proc_call •

    $default  reduce using rule 32 (simple_stmt)


State 44

   31 simple_stmt: l_value • ":=" expr
   55 l_value: l_value • '[' expr ']'

    ":="  shift, and go to state 75
    '['   shift, and go to state 76


State 45

    5 header: T_id "is" data_type ':' fpar_def • header_aux

    $default  reduce using rule 7 (header_aux)

    header_aux  go to state 77


State 46

    8 header_aux: header_aux ',' • fpar_def

    T_id  shift, and go to state 13

    fpar_def  go to state 78
    id_aux    go to state 15


State 47

   15 fpar_type: "ref" • data_type

    "byte"  shift, and go to state 10
    "int"   shift, and go to state 11

    data_type  go to state 79


State 48

   12 type: data_type •
   17 array_type: data_type • '[' ']'

    '['  shift, and go to state 80

    '['       [reduce using rule 12 (type)]
    $default  reduce using rule 12 (type)


State 49

   13 type: type • '[' T_intconst ']'
   14 fpar_type: type •

    '['  shift, and go to state 81

    $default  reduce using rule 14 (fpar_type)


State 50

    9 fpar_def: id_aux "as" fpar_type •

    $default  reduce using rule 9 (fpar_def)


State 51

   16 fpar_type: array_type •
   18 array_type: array_type • '[' T_intconst ']'

    '['  shift, and go to state 82

    $default  reduce using rule 16 (fpar_type)


State 52

   45 block: "begin" stmt "end" •

    $default  reduce using rule 45 (block)


State 53

   24 var_def: "var" id_aux "is" • type

    "byte"  shift, and go to state 10
    "int"   shift, and go to state 11

    data_type  go to state 83
    type       go to state 84


State 54

   40 simple_stmt: "break" ':' • T_id

    T_id  shift, and go to state 85


State 55

   42 simple_stmt: "continue" ':' • T_id

    T_id  shift, and go to state 86


State 56

   69 expr: "false" •

    $default  reduce using rule 69 (expr)


State 57

   76 cond_aux: "not" • cond

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 68
    cond       go to state 87
    cond_aux   go to state 70


State 58

   68 expr: "true" •

    $default  reduce using rule 68 (expr)


State 59

   62 expr: "+" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 89


State 60

   61 expr: "-" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 90


State 61

   51 func_call: T_id • '(' ')'
   52          | T_id • '(' expr expr_aux ')'
   53 l_value: T_id •

    '('  shift, and go to state 91

    $default  reduce using rule 53 (l_value)


State 62

   56 expr: T_intconst •

    $default  reduce using rule 56 (expr)


State 63

   57 expr: T_charconst •

    $default  reduce using rule 57 (expr)


State 64

   70 expr: '!' • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 92


State 65

   59 expr: '(' • expr ')'
   74 cond: '(' • cond_aux ')'

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 93
    cond       go to state 94
    cond_aux   go to state 95


State 66

   60 expr: func_call •

    $default  reduce using rule 60 (expr)


State 67

   55 l_value: l_value • '[' expr ']'
   58 expr: l_value •

    '['  shift, and go to state 76

    $default  reduce using rule 58 (expr)


State 68

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   73 cond: expr •
   79 cond_aux: expr • "=" expr
   80         | expr • "<>" expr
   81         | expr • "<" expr
   82         | expr • ">" expr
   83         | expr • "<=" expr
   84         | expr • ">=" expr

    "="   shift, and go to state 96
    "<>"  shift, and go to state 97
    "<"   shift, and go to state 98
    ">"   shift, and go to state 99
    "<="  shift, and go to state 100
    ">="  shift, and go to state 101
    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    '|'   shift, and go to state 107
    '&'   shift, and go to state 108

    $default  reduce using rule 73 (cond)


State 69

   35 simple_stmt: "if" cond • ':' block
   36            | "if" cond • ':' block if_aux "else" ':' block
   77 cond_aux: cond • "and" cond
   78         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110
    ':'    shift, and go to state 111


State 70

   75 cond: cond_aux •

    $default  reduce using rule 75 (cond)


State 71

   38 simple_stmt: "loop" T_id • ':' block

    ':'  shift, and go to state 112


State 72

   37 simple_stmt: "loop" ':' • block

    "begin"  shift, and go to state 16

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 113


State 73

   34 simple_stmt: "return" ':' • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 114


State 74

   48 proc_call: T_id ':' • expr expr_aux

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 115


State 75

   31 simple_stmt: l_value ":=" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 116


State 76

   55 l_value: l_value '[' • expr ']'

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 117


State 77

    5 header: T_id "is" data_type ':' fpar_def header_aux •
    8 header_aux: header_aux • ',' fpar_def

    ','  shift, and go to state 46

    $default  reduce using rule 5 (header)


State 78

    8 header_aux: header_aux ',' fpar_def •

    $default  reduce using rule 8 (header_aux)


State 79

   15 fpar_type: "ref" data_type •

    $default  reduce using rule 15 (fpar_type)


State 80

   17 array_type: data_type '[' • ']'

    ']'  shift, and go to state 118


State 81

   13 type: type '[' • T_intconst ']'

    T_intconst  shift, and go to state 119


State 82

   18 array_type: array_type '[' • T_intconst ']'

    T_intconst  shift, and go to state 120


State 83

   12 type: data_type •

    $default  reduce using rule 12 (type)


State 84

   13 type: type • '[' T_intconst ']'
   24 var_def: "var" id_aux "is" type •

    '['  shift, and go to state 81

    $default  reduce using rule 24 (var_def)


State 85

   40 simple_stmt: "break" ':' T_id •

    $default  reduce using rule 40 (simple_stmt)


State 86

   42 simple_stmt: "continue" ':' T_id •

    $default  reduce using rule 42 (simple_stmt)


State 87

   76 cond_aux: "not" cond •
   77         | cond • "and" cond
   78         | cond • "or" cond

    $default  reduce using rule 76 (cond_aux)


State 88

   59 expr: '(' • expr ')'

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 121


State 89

   62 expr: "+" expr •
   63     | expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 62 (expr)


State 90

   61 expr: "-" expr •
   63     | expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 61 (expr)


State 91

   51 func_call: T_id '(' • ')'
   52          | T_id '(' • expr expr_aux ')'

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88
    ')'          shift, and go to state 122

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 123


State 92

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   70     | '!' expr •
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 70 (expr)


State 93

   59 expr: '(' expr • ')'
   63     | expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   73 cond: expr •
   79 cond_aux: expr • "=" expr
   80         | expr • "<>" expr
   81         | expr • "<" expr
   82         | expr • ">" expr
   83         | expr • "<=" expr
   84         | expr • ">=" expr

    "="   shift, and go to state 96
    "<>"  shift, and go to state 97
    "<"   shift, and go to state 98
    ">"   shift, and go to state 99
    "<="  shift, and go to state 100
    ">="  shift, and go to state 101
    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    '|'   shift, and go to state 107
    '&'   shift, and go to state 108
    ')'   shift, and go to state 124

    $default  reduce using rule 73 (cond)


State 94

   77 cond_aux: cond • "and" cond
   78         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110


State 95

   74 cond: '(' cond_aux • ')'
   75     | cond_aux •

    ')'  shift, and go to state 125

    $default  reduce using rule 75 (cond)


State 96

   79 cond_aux: expr "=" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 126


State 97

   80 cond_aux: expr "<>" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 127


State 98

   81 cond_aux: expr "<" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 128


State 99

   82 cond_aux: expr ">" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 129


State 100

   83 cond_aux: expr "<=" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 130


State 101

   84 cond_aux: expr ">=" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 131


State 102

   63 expr: expr "+" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 132


State 103

   64 expr: expr "-" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 133


State 104

   65 expr: expr "*" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 134


State 105

   66 expr: expr "/" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 135


State 106

   67 expr: expr "%" • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 136


State 107

   72 expr: expr '|' • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 137


State 108

   71 expr: expr '&' • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 138


State 109

   77 cond_aux: cond "and" • cond

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 68
    cond       go to state 139
    cond_aux   go to state 70


State 110

   78 cond_aux: cond "or" • cond

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 68
    cond       go to state 140
    cond_aux   go to state 70


State 111

   35 simple_stmt: "if" cond ':' • block
   36            | "if" cond ':' • block if_aux "else" ':' block

    "begin"  shift, and go to state 16

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 141


State 112

   38 simple_stmt: "loop" T_id ':' • block

    "begin"  shift, and go to state 16

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 142


State 113

   37 simple_stmt: "loop" ':' block •

    $default  reduce using rule 37 (simple_stmt)


State 114

   34 simple_stmt: "return" ':' expr •
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 34 (simple_stmt)


State 115

   48 proc_call: T_id ':' expr • expr_aux
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 49 (expr_aux)

    expr_aux  go to state 143


State 116

   31 simple_stmt: l_value ":=" expr •
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 31 (simple_stmt)


State 117

   55 l_value: l_value '[' expr • ']'
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ']'  shift, and go to state 144


State 118

   17 array_type: data_type '[' ']' •

    $default  reduce using rule 17 (array_type)


State 119

   13 type: type '[' T_intconst • ']'

    ']'  shift, and go to state 145


State 120

   18 array_type: array_type '[' T_intconst • ']'

    ']'  shift, and go to state 146


State 121

   59 expr: '(' expr • ')'
   63     | expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108
    ')'  shift, and go to state 124


State 122

   51 func_call: T_id '(' ')' •

    $default  reduce using rule 51 (func_call)


State 123

   52 func_call: T_id '(' expr • expr_aux ')'
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 49 (expr_aux)

    expr_aux  go to state 147


State 124

   59 expr: '(' expr ')' •

    $default  reduce using rule 59 (expr)


State 125

   74 cond: '(' cond_aux ')' •

    $default  reduce using rule 74 (cond)


State 126

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   79 cond_aux: expr "=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 79 (cond_aux)


State 127

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   80 cond_aux: expr "<>" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 80 (cond_aux)


State 128

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   81 cond_aux: expr "<" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 81 (cond_aux)


State 129

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   82 cond_aux: expr ">" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 82 (cond_aux)


State 130

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   83 cond_aux: expr "<=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 83 (cond_aux)


State 131

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   84 cond_aux: expr ">=" expr •

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 84 (cond_aux)


State 132

   63 expr: expr • "+" expr
   63     | expr "+" expr •
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 63 (expr)


State 133

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   64     | expr "-" expr •
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 64 (expr)


State 134

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   65     | expr "*" expr •
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 65 (expr)


State 135

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   66     | expr "/" expr •
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 66 (expr)


State 136

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   67     | expr "%" expr •
   71     | expr • '&' expr
   72     | expr • '|' expr

    $default  reduce using rule 67 (expr)


State 137

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr
   72     | expr '|' expr •

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '&'  shift, and go to state 108

    $default  reduce using rule 72 (expr)


State 138

   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   71     | expr '&' expr •
   72     | expr • '|' expr

    $default  reduce using rule 71 (expr)


State 139

   77 cond_aux: cond • "and" cond
   77         | cond "and" cond •
   78         | cond • "or" cond

    $default  reduce using rule 77 (cond_aux)


State 140

   77 cond_aux: cond • "and" cond
   78         | cond • "or" cond
   78         | cond "or" cond •

    "and"  shift, and go to state 109

    $default  reduce using rule 78 (cond_aux)


State 141

   35 simple_stmt: "if" cond ':' block •
   36            | "if" cond ':' block • if_aux "else" ':' block

    "elif"    reduce using rule 43 (if_aux)
    "else"    reduce using rule 43 (if_aux)
    $default  reduce using rule 35 (simple_stmt)

    if_aux  go to state 148


State 142

   38 simple_stmt: "loop" T_id ':' block •

    $default  reduce using rule 38 (simple_stmt)


State 143

   48 proc_call: T_id ':' expr expr_aux •
   50 expr_aux: expr_aux • ',' expr

    ','  shift, and go to state 149

    $default  reduce using rule 48 (proc_call)


State 144

   55 l_value: l_value '[' expr ']' •

    $default  reduce using rule 55 (l_value)


State 145

   13 type: type '[' T_intconst ']' •

    $default  reduce using rule 13 (type)


State 146

   18 array_type: array_type '[' T_intconst ']' •

    $default  reduce using rule 18 (array_type)


State 147

   50 expr_aux: expr_aux • ',' expr
   52 func_call: T_id '(' expr expr_aux • ')'

    ','  shift, and go to state 149
    ')'  shift, and go to state 150


State 148

   36 simple_stmt: "if" cond ':' block if_aux • "else" ':' block
   44 if_aux: if_aux • "elif" cond ':' block

    "elif"  shift, and go to state 151
    "else"  shift, and go to state 152


State 149

   50 expr_aux: expr_aux ',' • expr

    "false"      shift, and go to state 56
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 88

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 153


State 150

   52 func_call: T_id '(' expr expr_aux ')' •

    $default  reduce using rule 52 (func_call)


State 151

   44 if_aux: if_aux "elif" • cond ':' block

    "false"      shift, and go to state 56
    "not"        shift, and go to state 57
    "true"       shift, and go to state 58
    "+"          shift, and go to state 59
    "-"          shift, and go to state 60
    T_id         shift, and go to state 61
    T_string     shift, and go to state 41
    T_intconst   shift, and go to state 62
    T_charconst  shift, and go to state 63
    '!'          shift, and go to state 64
    '('          shift, and go to state 65

    func_call  go to state 66
    l_value    go to state 67
    expr       go to state 68
    cond       go to state 154
    cond_aux   go to state 70


State 152

   36 simple_stmt: "if" cond ':' block if_aux "else" • ':' block

    ':'  shift, and go to state 155


State 153

   50 expr_aux: expr_aux ',' expr •
   63 expr: expr • "+" expr
   64     | expr • "-" expr
   65     | expr • "*" expr
   66     | expr • "/" expr
   67     | expr • "%" expr
   71     | expr • '&' expr
   72     | expr • '|' expr

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    '|'  shift, and go to state 107
    '&'  shift, and go to state 108

    $default  reduce using rule 50 (expr_aux)


State 154

   44 if_aux: if_aux "elif" cond • ':' block
   77 cond_aux: cond • "and" cond
   78         | cond • "or" cond

    "and"  shift, and go to state 109
    "or"   shift, and go to state 110
    ':'    shift, and go to state 156


State 155

   36 simple_stmt: "if" cond ':' block if_aux "else" ':' • block

    "begin"  shift, and go to state 16

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 157


State 156

   44 if_aux: if_aux "elif" cond ':' • block

    "begin"  shift, and go to state 16

    $default  reduce using rule 28 (stmt_list)

    stmt       go to state 22
    stmt_list  go to state 23
    block      go to state 158


State 157

   36 simple_stmt: "if" cond ':' block if_aux "else" ':' block •

    $default  reduce using rule 36 (simple_stmt)


State 158

   44 if_aux: if_aux "elif" cond ':' block •

    $default  reduce using rule 44 (if_aux)
